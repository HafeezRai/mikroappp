{"ast":null,"code":"import { push } from 'connected-react-router';\nexport function setActiveBalance(balanceId) {\n  // return {\n  //   type: 'balances/SET_ACTIVE_BALANCE',\n  //   payload: {\n  //     balanceId\n  //   }\n  // };\n  return push({\n    search: \"?currency=\".concat(balanceId)\n  });\n}\nexport function setBalances(balances) {\n  return function (dispatch) {\n    dispatch({\n      type: 'balances/SET_BALANCES',\n      payload: {\n        balances: balances.map(function (_ref) {\n          var currency = _ref.currency,\n              balance = _ref.balance,\n              locked = _ref.locked;\n          return {\n            currency: currency,\n            balance: +balance,\n            // Convert to numeric\n            locked: +locked // Convert to numeric\n\n          };\n        })\n      }\n    });\n    dispatch(setActiveBalance(balances[0].currency));\n  };\n}\nexport function setDepositsHistory(history) {\n  return {\n    type: 'balances/SET_DEPOSITS_HISTORY',\n    payload: {\n      history: history\n    }\n  };\n}\nexport function setWithdrawsHistory(history) {\n  return {\n    type: 'balances/SET_WITHDRAWS_HISTORY',\n    payload: {\n      history: history\n    }\n  };\n}\nexport function setWalletAddress(_ref2) {\n  var currency = _ref2.currency,\n      address = _ref2.address;\n  return {\n    type: 'balances/SET_WALLET_ADDRESS',\n    payload: {\n      currency: currency,\n      address: address\n    }\n  };\n}","map":{"version":3,"sources":["/Users/apple/Downloads/mikroapp-5db12a611b6a06574105a6f51ca416bfcf496a47/src/actions/balances.js"],"names":["push","setActiveBalance","balanceId","search","setBalances","balances","dispatch","type","payload","map","currency","balance","locked","setDepositsHistory","history","setWithdrawsHistory","setWalletAddress","address"],"mappings":"AAAA,SAASA,IAAT,QAAqB,wBAArB;AAEA,OAAO,SAASC,gBAAT,CAA0BC,SAA1B,EAAqC;AAC1C;AACA;AACA;AACA;AACA;AACA;AAEA,SAAOF,IAAI,CAAC;AACVG,IAAAA,MAAM,sBAAeD,SAAf;AADI,GAAD,CAAX;AAGD;AAED,OAAO,SAASE,WAAT,CAAqBC,QAArB,EAA+B;AACpC,SAAO,UAAAC,QAAQ,EAAI;AACjBA,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,uBADC;AAEPC,MAAAA,OAAO,EAAE;AACPH,QAAAA,QAAQ,EAAEA,QAAQ,CAACI,GAAT,CAAa;AAAA,cAAEC,QAAF,QAAEA,QAAF;AAAA,cAAYC,OAAZ,QAAYA,OAAZ;AAAA,cAAqBC,MAArB,QAAqBA,MAArB;AAAA,iBAAkC;AACvDF,YAAAA,QAAQ,EAARA,QADuD;AAEvDC,YAAAA,OAAO,EAAE,CAACA,OAF6C;AAEpC;AACnBC,YAAAA,MAAM,EAAE,CAACA,MAH8C,CAGvC;;AAHuC,WAAlC;AAAA,SAAb;AADH;AAFF,KAAD,CAAR;AAWAN,IAAAA,QAAQ,CAACL,gBAAgB,CAACI,QAAQ,CAAC,CAAD,CAAR,CAAYK,QAAb,CAAjB,CAAR;AACD,GAbD;AAcD;AAED,OAAO,SAASG,kBAAT,CAA4BC,OAA5B,EAAqC;AAC1C,SAAO;AACLP,IAAAA,IAAI,EAAE,+BADD;AAELC,IAAAA,OAAO,EAAE;AACPM,MAAAA,OAAO,EAAPA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASC,mBAAT,CAA6BD,OAA7B,EAAsC;AAC3C,SAAO;AACLP,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAE;AACPM,MAAAA,OAAO,EAAPA;AADO;AAFJ,GAAP;AAMD;AAED,OAAO,SAASE,gBAAT,QAA+C;AAAA,MAApBN,QAAoB,SAApBA,QAAoB;AAAA,MAAVO,OAAU,SAAVA,OAAU;AACpD,SAAO;AACLV,IAAAA,IAAI,EAAE,6BADD;AAELC,IAAAA,OAAO,EAAE;AACPE,MAAAA,QAAQ,EAARA,QADO;AAEPO,MAAAA,OAAO,EAAPA;AAFO;AAFJ,GAAP;AAOD","sourcesContent":["import { push } from 'connected-react-router';\n\nexport function setActiveBalance(balanceId) {\n  // return {\n  //   type: 'balances/SET_ACTIVE_BALANCE',\n  //   payload: {\n  //     balanceId\n  //   }\n  // };\n\n  return push({\n    search: `?currency=${balanceId}`\n  });\n}\n\nexport function setBalances(balances) {\n  return dispatch => {\n    dispatch({\n      type: 'balances/SET_BALANCES',\n      payload: {\n        balances: balances.map(({currency, balance, locked}) => ({\n          currency,\n          balance: +balance, // Convert to numeric\n          locked: +locked // Convert to numeric\n        }))\n      }\n    });\n\n    dispatch(setActiveBalance(balances[0].currency));\n  };\n}\n\nexport function setDepositsHistory(history) {\n  return {\n    type: 'balances/SET_DEPOSITS_HISTORY',\n    payload: {\n      history\n    }\n  };\n}\n\nexport function setWithdrawsHistory(history) {\n  return {\n    type: 'balances/SET_WITHDRAWS_HISTORY',\n    payload: {\n      history\n    }\n  };\n}\n\nexport function setWalletAddress({currency, address}) {\n  return {\n    type: 'balances/SET_WALLET_ADDRESS',\n    payload: {\n      currency,\n      address\n    }\n  };\n}\n"]},"metadata":{},"sourceType":"module"}