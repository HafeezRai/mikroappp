{"ast":null,"code":"import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\nimport rootReducer from './reducers';\nimport { history } from './history';\nvar composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({// Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n}) : compose;\nexport var store = createStore(rootReducer, composeEnhancers(applyMiddleware(routerMiddleware(history), // for dispatching history actions\nthunk // ... other middlewares ...\n)));","map":{"version":3,"sources":["/Users/apple/Downloads/mikroapp-5db12a611b6a06574105a6f51ca416bfcf496a47/src/store.js"],"names":["createStore","compose","applyMiddleware","thunk","routerMiddleware","rootReducer","history","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,OAAtB,EAA+BC,eAA/B,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AACA,SAASC,OAAT,QAAwB,WAAxB;AAEA,IAAMC,gBAAgB,GACpB,OAAOC,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACC,oCAArC,GACID,MAAM,CAACC,oCAAP,CAA4C,CAC5C;AAD4C,CAA5C,CADJ,GAIIR,OALN;AAOA,OAAO,IAAMS,KAAK,GAAGV,WAAW,CAC9BK,WAD8B,EAE9BE,gBAAgB,CACdL,eAAe,CACbE,gBAAgB,CAACE,OAAD,CADH,EACc;AAC3BH,KAFa,CAGb;AAHa,CADD,CAFc,CAAzB","sourcesContent":["import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { routerMiddleware } from 'connected-react-router';\n\nimport rootReducer from './reducers';\nimport { history } from './history';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n      // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n    })\n    : compose;\n\nexport const store = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(\n      routerMiddleware(history), // for dispatching history actions\n      thunk,\n      // ... other middlewares ...\n    ),\n  ),\n);\n"]},"metadata":{},"sourceType":"module"}